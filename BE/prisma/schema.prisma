// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @unique @default(uuid())
  name         String
  email        String
  password     String
  role         Int
  attachment   String
  createdAt    DateTime       @default(now())
  Admin        Admin[]
  Teacher      Teacher[]
  Student      Student[]
  User_Comment User_Comment[]

  @@map("users")
}

model Admin {
  id     String @id @unique @default(uuid())
  user User   @relation(fields: [userId], references: [id])
  userId String
  @@index([userId])
  @@map("admins")
}

model Teacher_Course {
  id        String   @id @unique @default(uuid())
  teacher Teacher? @relation(fields: [teacherId], references: [id])
  course  Course   @relation(fields: [courseId], references: [id])
  teacherId String?
  courseId  String

  @@index([teacherId])
  @@index([courseId])

  @@map("teacher_courses")
}

model Teacher {
  id             String           @id @unique @default(uuid())
  user         User             @relation(fields: [userId], references: [id])
  Teacher_Course Teacher_Course[]
  userId         String

  @@index([userId])
  @@map("teachers")
}

model Student {
  id     String @id @unique @default(uuid())
  user User   @relation(fields: [userId], references: [id])
  userId String
@@index([userId])
@@map("students")
}

model Course {
  id             String           @id @unique @default(uuid())
  title          String
  description    String?
  content        String
  Teacher_Course Teacher_Course[]

  @@map("courses")
}

model User_Comment {
  id        String  @id @unique @default(uuid())
  user    User    @relation(fields: [userId], references: [id])
  comment Comment @relation(fields: [commentId], references: [id])
  userId    String
  commentId String

  @@index([userId])
  @@index([commentId])
  @@map("user_comments")
}

model Comment {
  id              String         @id @unique @default(uuid())
  content_comment String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @default(now())
  User_Comment    User_Comment[]

  @@map("comments")
}